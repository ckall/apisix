services:
  gateway:
    build:
      dockerfile: Dockerfile
    depends_on:
      - etcd
    networks:
      - apisix
    volumes:
      - ./apisix/:/usr/local/apisix/apisix/
      - ./conf/:/usr/local/apisix/conf/
    ports:
      - "80:9080"
      - "9180:9180"
      - "9091:9091"
      - "9090:9090"
      - "9990:9990"
    restart: always

  etcd:
    image: registry.cn-hangzhou.aliyuncs.com/zhen202407/etcd:latest
    ports:
      - "2380:2380"
      - "2379:2379"
    networks:
      - apisix
    volumes:
      - /data/etcd:/opt/bitnami/etcd/data
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://172.16.179.206:2379,http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    restart: always

  etcdkeeper:
    image: evildecay/etcdkeeper
    ports:
      - "28080:8080"
    networks:
      - apisix
    depends_on:
      - etcd
    restart: always


  dashboard:
    image: registry.cn-hangzhou.aliyuncs.com/zhen202407/apisix-dashboard:3.0.1-alpine
    networks:
      - apisix
    volumes:
      - ./conf/config.dashboard.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
      - ./conf/schema.json:/usr/local/apisix-dashboard/conf/schema.json
    ports:
      - "9002:9000"
    container_name: apisix-dashboard
    restart: always
#
## 分割线
#  mysql:
#    container_name: mysql
#    image: "mysql:8.0"
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_HOST: "%"
#      MYSQL_ROOT_PASSWORD: ckrootpass
#      MYSQL_USER: ckuser
#      MYSQL_PASSWORD: ckpass
#      MYSQL_DATABASE: cloud
#      TZ: Asia/Shanghai
#    volumes:
#      - 'cloudmysql:/var/lib/mysql'
#    networks:
#      - apisix
#    healthcheck:
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#      interval: 5s
#      timeout: 10s
#      retries: 3
#  kafaka:
#    container_name: kafka
#    image: "wurstmeister/kafka:2.13-2.6.0"
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zoo-kfk
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: "127.0.0.1"
#      KAFKA_ZOOKEEPER_CONNECT: zoo-kfk:2181
#    networks:
#      - apisix
#  zoo-kfk:
#    container_name: zoo-kafka
#    image: "zookeeper:3.6"
#    networks:
#      - apisix
#  redis:
#    container_name: redis
#    image: "redis:6.2"
#    ports:
#      - "6379:6379"
#    volumes:
#      - 'cloudredis:/data'
#    networks:
#      - apisix
#    command:
#      - redis-server
#      - --databases
#      - "65536"
#  mongo:
#    container_name: mongo
#    image: "mongo:4.4"
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: mongopass
#    volumes:
#      - 'cloudmongo:/data/db'
#    networks:
#      - apisix
#  es:
#    image: spacespell/elasticsearch-ik-pinyin:v7.11.2
#    container_name: es
#    environment:
#      - node.name=es
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xmx1g -Xms1g
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#      - 9200:9200
#    volumes:
#      - cloudes:/usr/share/elasticsearch/data
#    networks:
#      - apisix
#  kib:
#    image: docker.elastic.co/kibana/kibana:7.10.0
#    container_name: kib
#    ports:
#      - 5601:5601
#    depends_on:
#      - es
#    environment:
#      ELASTICSEARCH_URL: http://es:9200
#      ELASTICSEARCH_HOSTS: http://es:9200
#    networks:
#      - apisix
networks:
  apisix:
#volumes:
##  cloudmysql:
#    driver: local
#  cloudredis:
#    driver: local
#  cloudmongo:
#    driver: local
#  cloudes:
#    driver: local
